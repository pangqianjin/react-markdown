{"version":3,"sources":["components/MD/index.js","utils/index.js","components/Body/index.jsx","components/Header/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["md","MarkdownIt","html","xhtmlOut","breaks","langPrefix","linkify","typographer","quotes","highlight","str","lang","hljs","getLanguage","value","__","utils","escapeHtml","downloadString","lines","arr","split","map","line","objFile","File","url","URL","createObjectURL","fetch","then","res","blob","a","document","createElement","body","appendChild","style","display","window","href","download","click","removeChild","revokeObjectURL","Body","state","lastValues","htmlString","shift","ctrl","onChange","target","setState","setHtmlString","text","render","handleKeydown","event","keyCode","preventDefault","addStyles","length","slice","handleKeydup","char1","char2","wrap","editNode","resizableTextArea","textArea","selectionStart","selectionEnd","focus","dropFile","file","dataTransfer","files","reader","FileReader","readAsText","onload","concat","result","this","timer","setInterval","Pubsub","subscribe","_","clearInterval","unsubscribe","id","TextArea","ref","el","onKeyDown","onKeyUp","placeholder","autoSize","minRows","bordered","onDrop","onDragOver","e","dangerouslySetInnerHTML","__html","Component","Header","save","PubSub","publish","clearAll","onClick","type","GithubOutlined","fontSize","margin","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9762353d.chunk.js","sourcesContent":["import MarkdownIt from 'markdown-it'\r\nimport hljs from 'highlight.js'\r\nimport 'highlight.js/styles/atom-one-light.css'\r\n\r\nconst md =  new MarkdownIt({\r\n    html:         true,        // 在源码中启用 HTML 标签\r\n    xhtmlOut:     true,        // 使用 '/' 来闭合单标签 （比如 <br />）。\r\n                                // 这个选项只对完全的 CommonMark 模式兼容。\r\n    breaks:       true,        // 转换段落里的 '\\n' 到 <br>。\r\n    langPrefix:   'language-',  // 给围栏代码块的 CSS 语言前缀。对于额外的高亮代码非常有用。\r\n    linkify:      true,        // 将类似 URL 的文本自动转换为链接。\r\n  \r\n    // 启用一些语言中立的替换 + 引号美化\r\n    typographer:  true,\r\n  \r\n    // 双 + 单引号替换对，当 typographer 启用时。\r\n    // 或者智能引号等，可以是 String 或 Array。\r\n    //\r\n    // 比方说，你可以支持 '«»„“' 给俄罗斯人使用， '„“‚‘'  给德国人使用。\r\n    // 还有 ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] 给法国人使用（包括 nbsp）。\r\n    quotes: '“”‘’',\r\n  \r\n    // 高亮函数，会返回转义的HTML。\r\n    // 或 '' 如果源字符串未更改，则应在外部进行转义。\r\n    // 如果结果以 <pre ... 开头，内部包装器则会跳过。\r\n    highlight: function (str, lang) {\r\n        if (lang && hljs.getLanguage(lang)) {\r\n          try {\r\n            return '<pre class=\"hljs\"><code>' +\r\n                   hljs.highlight(lang, str, true).value +\r\n                   '</code></pre>';\r\n          } catch (__) {}\r\n        }\r\n    \r\n        return '<pre class=\"hljs\"><code>' + md.utils.escapeHtml(str) + '</code></pre>';\r\n      }\r\n  })\r\n\r\n  export default md;","export const downloadString = (lines)=>{\r\n    let arr = lines.split('\\n');\r\n    arr = arr.map(line=>line+'\\n')\r\n    const objFile=new File(arr,'demo.md')\r\n    const url = URL.createObjectURL(objFile)\r\n    fetch(url).then(res => res.blob()).then(blob => {\r\n        const a = document.createElement('a');\r\n        document.body.appendChild(a)\r\n        a.style.display = 'none'\r\n        // 使用获取到的blob对象创建的url\r\n        const url = window.URL.createObjectURL(blob);\r\n        a.href = url;\r\n        // 指定下载的文件名\r\n        a.download = 'demo.md';\r\n        a.click();\r\n        document.body.removeChild(a)\r\n        // 移除blob对象的url\r\n        window.URL.revokeObjectURL(url);\r\n      });\r\n}","import React, { Component } from 'react';\r\nimport {Input} from 'antd'\r\nimport Pubsub from 'pubsub-js'\r\nimport md from '../MD'\r\nimport {downloadString} from '../../utils'\r\nimport 'highlight.js/styles/atom-one-light.css'\r\nimport '../../assets/css/fluent.css'\r\nimport './style.css'\r\n\r\n\r\n\r\nexport default class Body extends Component {\r\n    state = {\r\n        value: '',// 输入区域的文本\r\n        lastValues: [],//历史输入的文本，用来撤销操作：ctrl+z\r\n        htmlString: '',// 转换后的HTML\r\n        shift: false,//是否按下shift\r\n        ctrl: true//是否按下ctrl\r\n    }\r\n\r\n    onChange = ({ target: { value } }) => {\r\n        this.setState({ value });//设置新的输入\r\n        this.setHtmlString(value)// 渲染\r\n    };\r\n\r\n    setHtmlString = (text)=>{\r\n        const htmlString =  md.render(text)\r\n        this.setState({htmlString})\r\n    }\r\n\r\n    componentDidMount(){\r\n        // 定时器，每两秒保存一下历史记录 \r\n        this.timer = setInterval(()=>{\r\n            const {lastValues, value} = this.state\r\n            if(lastValues[lastValues.length-1]!==value){// 最近一次历史记录与当前不同时\r\n                this.setState({lastValues: [...lastValues, value]})\r\n                this.setHtmlString(value)// 渲染\r\n            }\r\n        }, 2000)\r\n\r\n        Pubsub.subscribe('addStyles', (_, {char1, char2, wrap})=>{\r\n            this.addStyles(char1, char2, wrap)\r\n        })\r\n\r\n        Pubsub.subscribe('download', ()=>{\r\n            this.download()\r\n        })\r\n\r\n        Pubsub.subscribe('clearAll', ()=>{\r\n            this.setState({value: ''})\r\n        })\r\n    }\r\n\r\n    // 键盘按下事件\r\n    handleKeydown = (event)=>{\r\n        const {keyCode} = event\r\n        const {shift, ctrl} = this.state\r\n            \r\n        if(keyCode===17) this.setState({ctrl: true}) // 按住ctrl键\r\n        if(keyCode===16) this.setState({shift: true})// 按住shift键\r\n\r\n        if(shift && ctrl){// 同时按下ctrl和shift\r\n            \r\n            if(keyCode===73){// ctrl+shift+i，插入图片\r\n                event.preventDefault();\r\n                this.addStyles('![ ]( )', '', false)\r\n            }\r\n            if(keyCode===75){// ctrl+shift+k，插入代码块\r\n                event.preventDefault();\r\n                this.addStyles('```\\n\\n', '```', false)\r\n            }\r\n        }else if(ctrl){// 只按下了ctrl键\r\n            if(keyCode===66){//按下ctrl+b，加粗\r\n                this.addStyles('**', '**')\r\n            }else if(keyCode===73){// 按下ctrl+i，斜体\r\n                this.addStyles('*', '*')\r\n            }else if(keyCode===90){//按下ctrl+z\r\n                const {lastValues} = this.state\r\n                const length = lastValues.length// 历史记录的数组长度\r\n                if(length!==0){\r\n                    const value = lastValues[length-1]\r\n                    this.setState({value, lastValues:[...lastValues.slice(0, length-1)]})\r\n                }\r\n            }\r\n        }\r\n     \r\n        if(keyCode===9){// tab键为4个空格\r\n            event.preventDefault();\r\n            this.addStyles('  ', '  ')\r\n        }    \r\n    }\r\n\r\n    // 键盘弹起事件\r\n    handleKeydup = (event)=>{\r\n        const {keyCode} = event\r\n        if(keyCode===16){// 松开shift\r\n            this.setState({shift: false})\r\n        }else if(keyCode===17){// 松开ctrl\r\n            this.setState({ctrl: false})\r\n        }\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        clearInterval(this.timer)// 清除定时器\r\n        Pubsub.unsubscribe('addStyles')\r\n        Pubsub.unsubscribe('download')\r\n        Pubsub.unsubscribe('clearAll')\r\n    }\r\n\r\n\r\n    // 添加粗体，斜体等, wrap是否包裹,\r\n    //  wrap=true时就在光标处添加*或者用*包裹选中的内容，\r\n    // 否则wrap=false 且 未选中内容时,直接插入char\r\n    addStyles = (char1, char2, wrap=true)=>{\r\n        let {value} = this.state\r\n        const {selectionStart, selectionEnd} = this.editNode.resizableTextArea.textArea\r\n        if(wrap){\r\n            value = selectionStart===selectionEnd? \r\n            value.slice(0, selectionStart)+char1+char2+value.slice(selectionEnd):\r\n            value.slice(0, selectionStart)+char1+value.slice(selectionStart, selectionEnd)+char2+value.slice(selectionEnd)\r\n        }else if(!wrap && selectionStart===selectionEnd){// 直接在光标处添加char字符\r\n            value = value.slice(0, selectionStart)+char1+char2+value.slice(selectionEnd)\r\n        }\r\n             \r\n        this.setState({value})\r\n        this.editNode.resizableTextArea.textArea.focus()// 点击工具栏按钮后也能focus输入区域\r\n   }\r\n    \r\n   // 下载文件\r\n    download = ()=>{\r\n        downloadString(this.state.value)\r\n    }\r\n\r\n    // 拖进以打开文件，同时拖拽多个文件时，只打开第一个\r\n    dropFile = (event)=>{\r\n        event.preventDefault()\r\n        const file = event.dataTransfer.files[0]\r\n        const reader = new FileReader();\r\n\r\n        reader.readAsText(file, \"utf-8\");\r\n        reader.onload = ()=>{\r\n            this.setState({value: ''.concat(reader.result)})\r\n        }\r\n    }                                                                                                                                                                                                                                                                                                                \r\n\r\n    render(){\r\n        const {value, htmlString} = this.state\r\n\r\n        return (\r\n            <div id='editor-body'>\r\n                <Input.TextArea id='editor' ref={el => this.editNode=el}\r\n                    onKeyDown={this.handleKeydown} onKeyUp={this.handleKeydup}\r\n                    value={value} placeholder='将你的markdown文件拖到此处打开'\r\n                    onChange={this.onChange}\r\n                    autoSize={{ minRows: 24}}\r\n                    bordered={false}\r\n                    onDrop={this.dropFile}\r\n                    onDragOver={(e)=>e.preventDefault()}\r\n                />\r\n\r\n                <div id='preview' dangerouslySetInnerHTML={{__html: htmlString}} />\r\n            </div>\r\n        )\r\n    } \r\n}\r\n","import { Button} from 'antd';\r\nimport PubSub from 'pubsub-js'\r\nimport {GithubOutlined} from '@ant-design/icons'\r\nimport React, { Component } from 'react';\r\nimport './style.css'\r\n\r\n\r\n\r\nclass Header extends Component {\r\n\r\n    save = ()=>{\r\n       PubSub.publish('download')\r\n    }\r\n\r\n\r\n    addStyles = (char1, char2, wrap=true)=>{\r\n        return ()=>{\r\n            PubSub.publish('addStyles', {char1, char2, wrap})\r\n        }   \r\n    }\r\n\r\n    clearAll = ()=>{\r\n        PubSub.publish('clearAll')\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id='header'>\r\n                <Button onClick={this.save} type='primary'>保存</Button>\r\n                <Button onClick={this.clearAll} type='primary'>清空</Button>\r\n                <Button onClick={this.addStyles('**', '**')}>加粗</Button>\r\n                <Button onClick={this.addStyles('*', '*')}>斜体</Button>\r\n                <Button onClick={this.addStyles('<u> ', ' </u>')}>下划线</Button>\r\n                <Button onClick={this.addStyles('```\\n\\n', '```', false)}>代码块</Button>\r\n                <Button onClick={this.addStyles('<!-- ', ' -->')}>注释</Button>\r\n                <Button onClick={this.addStyles('![ ]( )', '', false)}>插入图片</Button>\r\n                <Button onClick={this.addStyles('[ ]( )', '', false)}>超链接</Button>\r\n                <a href='https://github.com/pangqianjin'>\r\n                    <GithubOutlined style={{fontSize:'30px',margin: '0.25em'}} />\r\n                </a>  \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import './App.css';\nimport Body from './components/Body';\nimport Header from './components/Header';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header id='header' />\n      <Body id='editor-body' />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}